{"user_id":"guestuser@gmail.com","version":"0.0.1","name":"get_nearest_hospitals","content":"import requests\nimport os\n\ndef get_nearest_hospitals(zip_code):\n    api_key = os.getenv('Google_API_Key')\n    try:\n        # Geocoding to get latitude and longitude of the ZIP code\n        geocode_url = f\"https://maps.googleapis.com/maps/api/geocode/json?address={zip_code}&key={api_key}\"\n        geocode_response = requests.get(geocode_url).json()\n        if geocode_response['status'] != 'OK':\n            return f\"Geocoding error: {geocode_response['status']}\"\n\n        location = geocode_response['results'][0]['geometry']['location']\n        latitude = location['lat']\n        longitude = location['lng']\n\n        # Places API to find hospitals near the coordinates\n        places_url = (\n            f\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\"\n            f\"location={latitude},{longitude}&radius=5000&type=hospital&key={api_key}\"\n        )\n        places_response = requests.get(places_url).json()\n        if places_response['status'] != 'OK':\n            return f\"Places API error: {places_response['status']}\"\n\n        # Extract hospital names and addresses\n        hospitals = [\n            f\"{place['name']} - {place['vicinity']}\"\n            for place in places_response.get('results', [])\n        ]\n        return hospitals if hospitals else \"No hospitals found nearby.\"\n\n    except Exception as e:\n        return f\"Error occurred: {str(e)}\"","description":"Finds the nearest hospitals given a zip code","libraries":[]}
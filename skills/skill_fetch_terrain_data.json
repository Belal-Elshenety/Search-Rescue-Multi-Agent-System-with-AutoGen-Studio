{"user_id":"guestuser@gmail.com","version":"0.0.1","name":"fetch_terrain_data","content":"import requests\nimport os\n\ndef fetch_terrain_by_zip(zip_code):\n    \"\"\"\n    API keys already set. Don't touch environment variables\n    Fetch DEM data for a given ZIP code using Google Maps Geocoding API and OpenTopography API.\n\n    Parameters:\n        zip_code (str): ZIP code to fetch DEM data for.\n\n    Returns:\n        dict: Metadata about the DEM file or error message.\n    \"\"\"\n    dataset_name = \"USGS30m\"\n    output_directory = \"/Users/belalelshenety/CSC480-F24/skills\"\n    output_file_name = \"usgs_dem.tif\"\n    \n    # Ensure the directory exists\n    os.makedirs(output_directory, exist_ok=True)\n    \n    # Construct the full output file path\n    output_file_path = os.path.join(output_directory, output_file_name)\n\n    google_api_key = os.getenv(\"GOOGLE_API_KEY\")\n    opentopo_api_key = os.getenv(\"OPENTOPO_API_KEY\")\n\n    try:\n        # Step 1: Geocode ZIP code to get latitude and longitude\n        geocode_url = f\"https://maps.googleapis.com/maps/api/geocode/json?address={zip_code}&key={google_api_key}\"\n        geocode_response = requests.get(geocode_url).json()\n\n        if geocode_response['status'] != 'OK':\n            return {\"error\": f\"Geocoding failed: {geocode_response['status']}\"}\n\n        location = geocode_response['results'][0]['geometry']['location']\n        lat, lon = location['lat'], location['lng']\n\n        # Step 2: Define a bounding box around the latitude/longitude\n        delta = 0.05  # ~5 km bounding box (adjust as needed)\n        south, north = lat - delta, lat + delta\n        west, east = lon - delta, lon + delta\n\n        # Step 3: Fetch DEM data from OpenTopography\n        opentopo_url = \"https://portal.opentopography.org/API/usgsdem\"\n        params = {\n            \"datasetName\": dataset_name,\n            \"south\": south,\n            \"north\": north,\n            \"west\": west,\n            \"east\": east,\n            \"outputFormat\": \"GTiff\",\n            \"API_Key\": opentopo_api_key,\n        }\n\n        response = requests.get(opentopo_url, params=params, stream=True)\n\n        if response.status_code != 200:\n            return {\"error\": f\"OpenTopography API failed with status code {response.status_code}: {response.text}\"}\n\n        # Save the DEM data to file in the specified directory\n        with open(output_file_path, \"wb\") as file:\n            for chunk in response.iter_content(chunk_size=8192):\n                file.write(chunk)\n\n        return {\n            \"message\": \"DEM data fetched successfully\",\n            \"file_path\": output_file_path,\n            \"bounding_box\": {\"south\": south, \"north\": north, \"west\": west, \"east\": east},\n        }\n\n    except Exception as e:\n        return {\"error\": str(e)}","description":"Generate and save images based on a user's query.","libraries":[]}